// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pack.proto

#include "pack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_pack_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pack_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PK_Head;
}  // namespace protobuf_pack_2eproto
namespace PKMSG {
class PK_HeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PK_Head>
      _instance;
} _PK_Head_default_instance_;
class Msg_BodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Msg_Body>
      _instance;
} _Msg_Body_default_instance_;
}  // namespace PKMSG
namespace protobuf_pack_2eproto {
static void InitDefaultsPK_Head() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PKMSG::_PK_Head_default_instance_;
    new (ptr) ::PKMSG::PK_Head();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PKMSG::PK_Head::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PK_Head =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPK_Head}, {}};

static void InitDefaultsMsg_Body() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PKMSG::_Msg_Body_default_instance_;
    new (ptr) ::PKMSG::Msg_Body();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PKMSG::Msg_Body::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Msg_Body =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsg_Body}, {
      &protobuf_pack_2eproto::scc_info_PK_Head.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PK_Head.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Msg_Body.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::PK_Head, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::PK_Head, pktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::PK_Head, pklength_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, pkhead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, msglength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, indexid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, bodynumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKMSG::Msg_Body, type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PKMSG::PK_Head)},
  { 7, -1, sizeof(::PKMSG::Msg_Body)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::PKMSG::_PK_Head_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PKMSG::_Msg_Body_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "pack.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\npack.proto\022\005PKMSG\"+\n\007PK_Head\022\016\n\006PkType"
      "\030\001 \001(\r\022\020\n\010PkLength\030\002 \001(\r\"\377\001\n\010Msg_Body\022\036\n"
      "\006PkHead\030\001 \001(\0132\016.PKMSG.PK_Head\022\013\n\003Msg\030\002 \001"
      "(\t\022\021\n\tMsgLength\030\003 \001(\r\022\017\n\007IndexID\030\005 \001(\r\022\020"
      "\n\010Sequence\030\006 \001(\r\022\022\n\nBodyNumber\030\007 \001(\r\022(\n\004"
      "Type\030\010 \001(\0162\032.PKMSG.Msg_Body.SystemType\"R"
      "\n\nSystemType\022\007\n\003IOS\020\000\022\013\n\007Android\020\001\022\013\n\007Sy"
      "mbian\020\002\022\013\n\007Windows\020\003\022\t\n\005Linux\020\004\022\t\n\005Other"
      "\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 330);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pack.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pack_2eproto
namespace PKMSG {
const ::google::protobuf::EnumDescriptor* Msg_Body_SystemType_descriptor() {
  protobuf_pack_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pack_2eproto::file_level_enum_descriptors[0];
}
bool Msg_Body_SystemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Msg_Body_SystemType Msg_Body::IOS;
const Msg_Body_SystemType Msg_Body::Android;
const Msg_Body_SystemType Msg_Body::Symbian;
const Msg_Body_SystemType Msg_Body::Windows;
const Msg_Body_SystemType Msg_Body::Linux;
const Msg_Body_SystemType Msg_Body::Other;
const Msg_Body_SystemType Msg_Body::SystemType_MIN;
const Msg_Body_SystemType Msg_Body::SystemType_MAX;
const int Msg_Body::SystemType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PK_Head::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PK_Head::kPkTypeFieldNumber;
const int PK_Head::kPkLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PK_Head::PK_Head()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pack_2eproto::scc_info_PK_Head.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKMSG.PK_Head)
}
PK_Head::PK_Head(const PK_Head& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pktype_, &from.pktype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pklength_) -
    reinterpret_cast<char*>(&pktype_)) + sizeof(pklength_));
  // @@protoc_insertion_point(copy_constructor:PKMSG.PK_Head)
}

void PK_Head::SharedCtor() {
  ::memset(&pktype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pklength_) -
      reinterpret_cast<char*>(&pktype_)) + sizeof(pklength_));
}

PK_Head::~PK_Head() {
  // @@protoc_insertion_point(destructor:PKMSG.PK_Head)
  SharedDtor();
}

void PK_Head::SharedDtor() {
}

void PK_Head::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PK_Head::descriptor() {
  ::protobuf_pack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PK_Head& PK_Head::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pack_2eproto::scc_info_PK_Head.base);
  return *internal_default_instance();
}


void PK_Head::Clear() {
// @@protoc_insertion_point(message_clear_start:PKMSG.PK_Head)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pktype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pklength_) -
      reinterpret_cast<char*>(&pktype_)) + sizeof(pklength_));
  _internal_metadata_.Clear();
}

bool PK_Head::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKMSG.PK_Head)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 PkType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PkLength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pklength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKMSG.PK_Head)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKMSG.PK_Head)
  return false;
#undef DO_
}

void PK_Head::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKMSG.PK_Head)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PkType = 1;
  if (this->pktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pktype(), output);
  }

  // uint32 PkLength = 2;
  if (this->pklength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pklength(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PKMSG.PK_Head)
}

::google::protobuf::uint8* PK_Head::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PKMSG.PK_Head)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PkType = 1;
  if (this->pktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pktype(), target);
  }

  // uint32 PkLength = 2;
  if (this->pklength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pklength(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKMSG.PK_Head)
  return target;
}

size_t PK_Head::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PKMSG.PK_Head)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 PkType = 1;
  if (this->pktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pktype());
  }

  // uint32 PkLength = 2;
  if (this->pklength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pklength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PK_Head::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PKMSG.PK_Head)
  GOOGLE_DCHECK_NE(&from, this);
  const PK_Head* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PK_Head>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PKMSG.PK_Head)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PKMSG.PK_Head)
    MergeFrom(*source);
  }
}

void PK_Head::MergeFrom(const PK_Head& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PKMSG.PK_Head)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pktype() != 0) {
    set_pktype(from.pktype());
  }
  if (from.pklength() != 0) {
    set_pklength(from.pklength());
  }
}

void PK_Head::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PKMSG.PK_Head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PK_Head::CopyFrom(const PK_Head& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PKMSG.PK_Head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PK_Head::IsInitialized() const {
  return true;
}

void PK_Head::Swap(PK_Head* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PK_Head::InternalSwap(PK_Head* other) {
  using std::swap;
  swap(pktype_, other->pktype_);
  swap(pklength_, other->pklength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PK_Head::GetMetadata() const {
  protobuf_pack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Msg_Body::InitAsDefaultInstance() {
  ::PKMSG::_Msg_Body_default_instance_._instance.get_mutable()->pkhead_ = const_cast< ::PKMSG::PK_Head*>(
      ::PKMSG::PK_Head::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_Body::kPkHeadFieldNumber;
const int Msg_Body::kMsgFieldNumber;
const int Msg_Body::kMsgLengthFieldNumber;
const int Msg_Body::kIndexIDFieldNumber;
const int Msg_Body::kSequenceFieldNumber;
const int Msg_Body::kBodyNumberFieldNumber;
const int Msg_Body::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_Body::Msg_Body()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pack_2eproto::scc_info_Msg_Body.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKMSG.Msg_Body)
}
Msg_Body::Msg_Body(const Msg_Body& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_pkhead()) {
    pkhead_ = new ::PKMSG::PK_Head(*from.pkhead_);
  } else {
    pkhead_ = NULL;
  }
  ::memcpy(&msglength_, &from.msglength_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msglength_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:PKMSG.Msg_Body)
}

void Msg_Body::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pkhead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&pkhead_)) + sizeof(type_));
}

Msg_Body::~Msg_Body() {
  // @@protoc_insertion_point(destructor:PKMSG.Msg_Body)
  SharedDtor();
}

void Msg_Body::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pkhead_;
}

void Msg_Body::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Msg_Body::descriptor() {
  ::protobuf_pack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Msg_Body& Msg_Body::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pack_2eproto::scc_info_Msg_Body.base);
  return *internal_default_instance();
}


void Msg_Body::Clear() {
// @@protoc_insertion_point(message_clear_start:PKMSG.Msg_Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pkhead_ != NULL) {
    delete pkhead_;
  }
  pkhead_ = NULL;
  ::memset(&msglength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&msglength_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Msg_Body::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKMSG.Msg_Body)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PKMSG.PK_Head PkHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pkhead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PKMSG.Msg_Body.Msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MsgLength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msglength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IndexID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indexid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Sequence = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BodyNumber = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bodynumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PKMSG.Msg_Body.SystemType Type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::PKMSG::Msg_Body_SystemType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKMSG.Msg_Body)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKMSG.Msg_Body)
  return false;
#undef DO_
}

void Msg_Body::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKMSG.Msg_Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PKMSG.PK_Head PkHead = 1;
  if (this->has_pkhead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pkhead(), output);
  }

  // string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PKMSG.Msg_Body.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // uint32 MsgLength = 3;
  if (this->msglength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msglength(), output);
  }

  // uint32 IndexID = 5;
  if (this->indexid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->indexid(), output);
  }

  // uint32 Sequence = 6;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sequence(), output);
  }

  // uint32 BodyNumber = 7;
  if (this->bodynumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bodynumber(), output);
  }

  // .PKMSG.Msg_Body.SystemType Type = 8;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PKMSG.Msg_Body)
}

::google::protobuf::uint8* Msg_Body::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PKMSG.Msg_Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PKMSG.PK_Head PkHead = 1;
  if (this->has_pkhead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pkhead(), deterministic, target);
  }

  // string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PKMSG.Msg_Body.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // uint32 MsgLength = 3;
  if (this->msglength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msglength(), target);
  }

  // uint32 IndexID = 5;
  if (this->indexid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->indexid(), target);
  }

  // uint32 Sequence = 6;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sequence(), target);
  }

  // uint32 BodyNumber = 7;
  if (this->bodynumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bodynumber(), target);
  }

  // .PKMSG.Msg_Body.SystemType Type = 8;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKMSG.Msg_Body)
  return target;
}

size_t Msg_Body::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PKMSG.Msg_Body)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .PKMSG.PK_Head PkHead = 1;
  if (this->has_pkhead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pkhead_);
  }

  // uint32 MsgLength = 3;
  if (this->msglength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msglength());
  }

  // uint32 IndexID = 5;
  if (this->indexid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->indexid());
  }

  // uint32 Sequence = 6;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequence());
  }

  // uint32 BodyNumber = 7;
  if (this->bodynumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bodynumber());
  }

  // .PKMSG.Msg_Body.SystemType Type = 8;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_Body::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PKMSG.Msg_Body)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_Body* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_Body>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PKMSG.Msg_Body)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PKMSG.Msg_Body)
    MergeFrom(*source);
  }
}

void Msg_Body::MergeFrom(const Msg_Body& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PKMSG.Msg_Body)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_pkhead()) {
    mutable_pkhead()->::PKMSG::PK_Head::MergeFrom(from.pkhead());
  }
  if (from.msglength() != 0) {
    set_msglength(from.msglength());
  }
  if (from.indexid() != 0) {
    set_indexid(from.indexid());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.bodynumber() != 0) {
    set_bodynumber(from.bodynumber());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Msg_Body::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PKMSG.Msg_Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Body::CopyFrom(const Msg_Body& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PKMSG.Msg_Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Body::IsInitialized() const {
  return true;
}

void Msg_Body::Swap(Msg_Body* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_Body::InternalSwap(Msg_Body* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pkhead_, other->pkhead_);
  swap(msglength_, other->msglength_);
  swap(indexid_, other->indexid_);
  swap(sequence_, other->sequence_);
  swap(bodynumber_, other->bodynumber_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Msg_Body::GetMetadata() const {
  protobuf_pack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PKMSG
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PKMSG::PK_Head* Arena::CreateMaybeMessage< ::PKMSG::PK_Head >(Arena* arena) {
  return Arena::CreateInternal< ::PKMSG::PK_Head >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PKMSG::Msg_Body* Arena::CreateMaybeMessage< ::PKMSG::Msg_Body >(Arena* arena) {
  return Arena::CreateInternal< ::PKMSG::Msg_Body >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
